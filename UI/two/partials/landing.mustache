<style>
  .landing-content{
    padding:0;
    overflow: hidden
  }

  .landing-content #btn_collection{
    background-color: #abcecc !important;
  }

  .landing-content #btn_searchpage{
    background-color: #fff2cd !important;
  }

  .landing-content a[href="#addNew"]{
    background-color: #ff004c !important;
    color: #fff2cd !important;
  }

</style>

<div data-role="page" id="landing">


  <!-- HEADER TEMPLATE -->
  {{>header}}
  <!-- END HEADER -->

  <!-- CONTENT -->
  <div role="main" class="ui-content landing-content">

      <a class="ui-btn btn_3rd" href="#addNew" onclick="clearForm();">
        <span>ADD NEW ITEMS</span>
      </a>

      <a class="ui-btn btn_3rd" id="btn_searchpage" href="#collection" onclick="btn_searchpage_clicked()">
        <span>THINGS<br>OTHER PEOPLE<br>SHARE</span>
      </a>

      <a class="ui-btn btn_3rd" id="btn_collection" class="btn_collection" href="#collection" onclick="btn_collection_clicked()">
        <span>MY COLLECTION</span>
      </a>

  </div>
  <!-- END CONTENT -->

 <!--{{>maps}}-->


</div>


<script>


$( document ).on( "pageshow", "#landing", function(e,ui) {

    console.log("just loaded landing");

})

function btn_collection_clicked(reload=false){
  if(collection)
  {
    console.log("collection clicked. username will be target");
    collection.searchQuery = {_id:""};
    collection.searchDB = glb_username;
  }
  if(reload)
  {
    $.mobile.changePage("#collection", {
       reloadPage: false
   });

  }
   refreshCollection();
}

function refreshCollection(callback=console.log,draw=true){
  $("#loadingGif").show();
  $("#itemList .item").parent().remove();
  setTimeout(function(){
      searchDB(collection.searchDB,collection.searchquery,function(inp){
        if(draw){
          drawItemCards(inp);
        }
        callback(inp);
      });
  },100)

}

function getItemsInMyPossesion(callback=console.log){
  getSingleItem("&inMyPossession",function(inMyPossesion){
    //updateBorrowItemsBatch(inMyPossesion.things.length)
    for (item of inMyPossesion.things)
    {
      getSingleItem(item,function(object){
        let card = makeItemCard(object);
        $("#itemList").prepend(card);
        addItemCardClickListener();
        collection.searchhistory[0].push(object);
        $("#itemList").listview('refresh');
      })
    }
  })
}

function btn_searchpage_clicked(){
  if(collection)
  {
    console.log("searchpage clicked. public is target");
    collection.searchQuery = {_id:""};
    collection.searchDB = "public";

    $("#loadingGif").show();
    $("#itemList .item").parent().remove();
    searchDB(collection.searchDB,collection.searchquery,drawItemCards);

  }
}

</script>
